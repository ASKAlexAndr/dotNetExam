//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exam.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.4.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=(LocalDB)\\MSSQLLocalDB;AttachDbFilename=D:\\Dev\\Exam\\DBLib\\ExamDB.mdf;" +
            "Integrated Security=True;Connect Timeout=30")]
        public string ExamDBConnectionString {
            get {
                return ((string)(this["ExamDBConnectionString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=np:\\\\.\\pipe\\LOCALDB#8F2B1841\\tsql\\query;Initial Catalog=ExamDB;Integr" +
            "ated Security=True")]
        public string ExamDBConnectionString1 {
            get {
                return ((string)(this["ExamDBConnectionString1"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=np:\\\\.\\pipe\\LOCALDB#099B4F97\\tsql\\query;Initial Catalog=ExamDB;Integr" +
            "ated Security=True")]
        public string ExamDBConnectionString2 {
            get {
                return ((string)(this["ExamDBConnectionString2"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=np:\\\\.\\pipe\\LOCALDB#3B4A3C90\\tsql\\query;Initial Catalog=ExamDB;Integr" +
            "ated Security=True")]
        public string ExamDBConnectionString3 {
            get {
                return ((string)(this["ExamDBConnectionString3"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=np:\\\\.\\pipe\\LOCALDB#D4FB2B70\\tsql\\query;Initial Catalog=ExamDB;Integr" +
            "ated Security=True")]
        public string ExamDBConnectionString4 {
            get {
                return ((string)(this["ExamDBConnectionString4"]));
            }
        }
    }
}
